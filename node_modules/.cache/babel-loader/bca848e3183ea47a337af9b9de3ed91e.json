{"ast":null,"code":"var _jsxFileName = \"D:\\\\EFUB SEMINAR\\\\todo-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './Components/TodoTemplate';\nimport TodoInsert from './Components/TodoInsert';\nimport TodoList from './Components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createBulkTodos() {\n  const array = [];\n\n  for (let i = 1; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: `할 일 ${i}`,\n      checked: false\n    });\n  }\n\n  return array;\n}\n\nfunction todoReducer(todos, action) {\n  switch (action.type) {\n    case 'INSERT':\n      return todos.concat(action.todo);\n\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== action.id);\n\n    case 'TOGGLE':\n      return todos.map(todo => todo.id === action.id ? { ...todo,\n        checked: !todo.checked\n      } : todo);\n\n    default:\n      return todos;\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos); //const [todos, setTodos] = useState(createBulkTodos);\n\n  const nextId = useRef(2501);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    }; //setTodos(todos => todos.concat(todo));\n\n    dispatch({\n      type: 'INSERT',\n      todo\n    });\n    nextId.current += 1;\n  }, []);\n  const onRemove = useCallback(id => {\n    //setTodos(todos => todos.filter(todo => todo.id !== id));\n    dispatch({\n      type: 'REMOVE',\n      id\n    });\n  }, []);\n  const onToggle = useCallback(id => {\n    /*setTodos( todos => \n      todos.map(todo=>\n        todo.id === id ?\n        {...todo, checked:!todo.checked}\n        :\n        todo\n        )\n    );*/\n    dispatch({\n      type: 'TOGGLE',\n      id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TodoTemplate, {\n    children: [/*#__PURE__*/_jsxDEV(TodoInsert, {\n      onInsert: onInsert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gxNQdhJu+UMVed+0nxOSqDrY9+o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/EFUB SEMINAR/todo-list/src/App.js"],"names":["React","useReducer","useState","useRef","useCallback","TodoTemplate","TodoInsert","TodoList","createBulkTodos","array","i","push","id","text","checked","todoReducer","todos","action","type","concat","todo","filter","map","App","dispatch","undefined","nextId","onInsert","current","onRemove","onToggle"],"mappings":"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","sourcesContent":["import React,{useReducer, useState, useRef, useCallback} from 'react';\nimport TodoTemplate from './Components/TodoTemplate';\nimport TodoInsert from './Components/TodoInsert';\nimport TodoList from './Components/TodoList';\n\nfunction createBulkTodos() {\n  const array = [];\n  for(let i=1; i<=2500; i++){\n    array.push({\n      id:i,\n      text: `할 일 ${i}`,\n      checked: false\n    });\n  }\n  return array;\n}\n\nfunction todoReducer(todos, action){\n  switch (action.type){\n    case 'INSERT':\n      return todos.concat(action.todo);\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== action.id);\n    case 'TOGGLE':\n      return todos.map(todo => todo.id === action.id ? {...todo, checked: !todo.checked} : todo);\n    default:\n      return todos;\n  }\n}\n\nfunction App() {\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n  //const [todos, setTodos] = useState(createBulkTodos);\n\n  const nextId = useRef(2501);\n\n  const onInsert = useCallback((text) => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      //setTodos(todos => todos.concat(todo));\n      dispatch({type: 'INSERT', todo});\n      nextId.current += 1;\n    },[]);\n\n  const onRemove = useCallback( id => {\n    //setTodos(todos => todos.filter(todo => todo.id !== id));\n    dispatch({type: 'REMOVE', id});\n  },[]);\n\n  const onToggle = useCallback( id => {\n    /*setTodos( todos => \n      todos.map(todo=>\n        todo.id === id ?\n        {...todo, checked:!todo.checked}\n        :\n        todo\n        )\n    );*/\n    dispatch({type:'TOGGLE', id});\n  },[]);\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert = {onInsert}/>\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/>\n    </TodoTemplate>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}